[
    {
        "title": "Question 1",
        "description": "What is Node.js?",
        "options": [
            "A JavaScript runtime built on Chrome's V8 JavaScript engine",
            "A CSS framework",
            "A database management system",
            "A server-side language"
        ],
        "answer": 0
    },
    {
        "title": "Question 2",
        "description": "Who developed Node.js?",
        "options": [
            "Ryan Dahl",
            "Guido van Rossum",
            "Brendan Eich",
            "Mark Zuckerberg"
        ],
        "answer": 0
    },
    {
        "title": "Question 3",
        "description": "What is npm?",
        "options": [
            "Node package manager",
            "A new JavaScript framework",
            "A type of database",
            "A tool for server management"
        ],
        "answer": 0
    },
    {
        "title": "Question 4",
        "description": "Which of the following is a core module in Node.js?",
        "options": [
            "http",
            "express",
            "mongoose",
            "react"
        ],
        "answer": 0
    },
    {
        "title": "Question 5",
        "description": "What is the purpose of `package.json`?",
        "options": [
            "To manage project dependencies and scripts",
            "To store user data",
            "To define application routes",
            "To configure the Node.js runtime"
        ],
        "answer": 0
    },
    {
        "title": "Question 6",
        "description": "What does `fs` stand for in Node.js?",
        "options": [
            "File System",
            "Functional Services",
            "Frontend Scripting",
            "File Storage"
        ],
        "answer": 0
    },
    {
        "title": "Question 7",
        "description": "Which method is used to read a file in Node.js?",
        "options": [
            "fs.readFile()",
            "fs.writeFile()",
            "fs.createFile()",
            "fs.deleteFile()"
        ],
        "answer": 0
    },
    {
        "title": "Question 8",
        "description": "How do you install a package using npm?",
        "options": [
            "npm install <package-name>",
            "npm add <package-name>",
            "npm get <package-name>",
            "npm fetch <package-name>"
        ],
        "answer": 0
    },
    {
        "title": "Question 9",
        "description": "What does `require()` do in Node.js?",
        "options": [
            "Imports modules",
            "Defines new variables",
            "Runs a script",
            "Deletes files"
        ],
        "answer": 0
    },
    {
        "title": "Question 10",
        "description": "Which method starts a Node.js server?",
        "options": [
            "app.listen()",
            "server.start()",
            "http.createServer()",
            "app.start()"
        ],
        "answer": 0
    },
    {
        "title": "Question 11",
        "description": "What is `callback hell`?",
        "options": [
            "A situation where callbacks are nested within other callbacks",
            "A state where Node.js crashes frequently",
            "A type of package dependency conflict",
            "An issue with asynchronous file reads"
        ],
        "answer": 0
    },
    {
        "title": "Question 12",
        "description": "What is the purpose of the `events` module in Node.js?",
        "options": [
            "To handle and emit events",
            "To manage HTTP requests",
            "To interact with the file system",
            "To perform mathematical calculations"
        ],
        "answer": 0
    },
    {
        "title": "Question 13",
        "description": "What is `express` in the context of Node.js?",
        "options": [
            "A web application framework",
            "A package manager",
            "A database driver",
            "A Node.js core module"
        ],
        "answer": 0
    },
    {
        "title": "Question 14",
        "description": "Which Node.js feature allows non-blocking operations?",
        "options": [
            "Asynchronous I/O",
            "Synchronous I/O",
            "Multi-threading",
            "File system locking"
        ],
        "answer": 0
    },
    {
        "title": "Question 15",
        "description": "What is `middleware` in Express.js?",
        "options": [
            "Functions that execute during the request-response cycle",
            "A type of Node.js server",
            "A feature to handle HTTP requests",
            "A way to connect to a database"
        ],
        "answer": 0
    }
]